@mixin for-size($range) {
    $phone-upper-boundary: 600px;
    $tablet-portrait-upper-boundary: 900px;
    $tablet-landscape-upper-boundary: 1200px;
    $desktop-upper-boundary: 1800px;
  
    @if $range == phone-only {
      @media (max-width: #{$phone-upper-boundary - 1}) { @content; }
    } @else if $range == tablet-portrait-up {
      @media (min-width: $phone-upper-boundary) { @content; }
    } @else if $range == tablet-landscape-up {
      @media (min-width: $tablet-portrait-upper-boundary) { @content; }
    } @else if $range == desktop-up {
      @media (min-width: $tablet-landscape-upper-boundary) { @content; }
    } @else if $range == big-desktop-up {
      @media (min-width: $desktop-upper-boundary) { @content; }
    }
  }

$gutter-X: 1em;
$gutter-Y: 1em;

.container {
  width: 100%;
  padding-right: 1.5rem;
  padding-left: 1.5rem;
  margin-right: auto;
  margin-left: auto;
}

[class^=grid-] {
  display: flex;
  flex-flow: row wrap;
  margin-right: calc(#{$gutter-X} * -.5);
  margin-left: calc(#{$gutter-X} * -.5);
}

@mixin flex-grid($n-grid) {

  .grid-#{$n-grid} > * {
    flex: 0 0 auto;
    width: calc(100% / #{$n-grid});
    padding-right: calc(#{$gutter-X} * .5);
    padding-left: calc(#{$gutter-X} * .5);
    padding-top: calc(#{$gutter-Y} * .5);
    padding-bottom: calc(#{$gutter-Y} * .5);
  }

}

@include flex-grid(1);

@mixin container--md() {

  .container {
    width: 85%;
  }

}

@mixin container--xl() {
  
  .container {
    width: 90%;
  }

}
